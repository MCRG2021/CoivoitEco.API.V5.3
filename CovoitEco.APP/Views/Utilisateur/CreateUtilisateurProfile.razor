@inherits CovoitEco.APP.Components.Utilisateur.SignUpUtilisateurComponent
@inject IToastService toastService

<div class="container pt-5">
    <div>
        <EditForm Model=@requestUtilisateurFormular OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label for="email" class="form-label fw-bold fs-5">Adresse mail</label>
                <InputText @bind-Value="requestUtilisateurFormular.email" class="form-control"/>
                   <ValidationMessage For="() => requestUtilisateurFormular.email"/>
            </div>
            <div class="form-group">
                <label for="username" class="form-label fw-bold fs-5">Prénom</label>
                <InputText @bind-Value="requestUtilisateurFormular.username" class="form-control"/>
                <ValidationMessage For="() => requestUtilisateurFormular.username"/>
            </div>
            <div class="form-group">
                <label for="family_name" class="form-label fw-bold fs-5">Nom</label>
                <InputText @bind-Value="requestUtilisateurFormular.family_name" class="form-control"/>
                 <ValidationMessage For="() => requestUtilisateurFormular.family_name"/>
            </div>
            <div class="form-group">
                <label for="password" class="form-label fw-bold fs-5">Mot de passe</label>
                <InputText @bind-Value="requestUtilisateurFormular.password" class="form-control"/>
                <ValidationMessage For="() => requestUtilisateurFormular.password"/>
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="checkbox" id="myCheck" name="remember" required>
                <label class="form-check-label" for="myCheck">Acceptez-vous nôtre politique de confidentialité?</label>
                <div class="valid-feedback">Valide.</div>
                <div class="invalid-feedback">Cocher cette case pour continuer.</div>
            </div>
            <button class="btn btn-primary" type="submit">Créer un utilisateur</button>
        </EditForm>
    </div>
</div>

@code {
    private void HandleInvalidSubmit()
    {
        toastService.ShowError("Erreur");
    }

    private async void HandleValidSubmit()
    {
        await CreateUtilisateurProfile();
        toastService.ShowSuccess("Succès");
    }
}
